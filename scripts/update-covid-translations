#!/usr/bin/env python3
import os, sys
import json
import fileinput

# Update the caresteouvert repo.
if not os.path.isdir('caresteouvert'):
    os.system('git clone git@github.com:osmontrouge/caresteouvert.git')
else:
    os.chdir('caresteouvert')
    os.system('git pull')
    os.chdir('..')

# Get the categories with existing German translations - remote
f = open('caresteouvert/locales/de.json',)
data = json.load(f)

trans = []
for key in data['categories']:
    trans.append(key)

f.close()

# Filter the categories we do not have translations for locally
keep = False
with open('app/translations.js') as f:
    for line in f:
        if line.__contains__("de: {"):
            keep = True
        if keep and line.__contains__("poi-"):
            word = line.split("': ")[0].split("-")[1]
            if word in trans:
                trans.remove(word)
        if line.__contains__("},"):
            keep = False

# Get the new German translations
f = open('caresteouvert/locales/de.json',)
data = json.load(f)

new_de_trans = []
for key in data['categories']:
    if key in trans:
        new_de_trans.append("    'poi-" + key +"': '" + data['categories'][key] + "',\n")

f.close()
new_de_trans.sort()

# Get the new English translations
f = open('caresteouvert/locales/en.json',)
data = json.load(f)

new_en_trans = []
for key in data['categories']:
    if key in trans:
        new_en_trans.append("    'poi-" + key +"': '" + data['categories'][key] + "',\n")

f.close()
new_en_trans.sort()

# Write the new translations to file.
for line in fileinput.FileInput("app/translations.js", inplace=1):
    if line == "  de: {\n":
        for trans in new_de_trans:
            line = line.replace(line, line+trans)
    if line == "  en: {\n":
        for trans in new_en_trans:
            line = line.replace(line, line+trans)
    print(line, end='')