#!/usr/bin/env python3
import os, sys
import json

# Update the caresteouvert repo.
if not os.path.isdir('caresteouvert'):
    os.system('git clone git@github.com:osmontrouge/caresteouvert.git')
else:
    os.chdir('caresteouvert')
    os.system('git pull')
    os.chdir('..')

# Get the categories with existing German translations - remote
f = open('caresteouvert/locales/de.json',)
data = json.load(f)

trans = []
for key in data['categories']:
    trans.append(key)

f.close()

# Filter the categories we do not have translations for locally (enough to check the German version)
with open('app/translations/de.json') as f:
  data = json.load(f)

for key in data:
    if key.startswith("poi-"):
        name = key.split("': ")[0].split("-")[1]
        if name in trans:
            trans.remove(name)

print("New translations are for:", trans)

# Get the new German translations
with open('caresteouvert/locales/de.json') as f:
    data = json.load(f)

new_de_trans = {}
for key in data['categories']:
    if key in trans:
        new_de_trans['poi-' + key] = data['categories'][key]

# Get the new English translations
with open('caresteouvert/locales/en.json') as f:
    data = json.load(f)

new_en_trans = {}
for key in data['categories']:
    if key in trans:
        new_en_trans['poi-' + key] = data['categories'][key]

# Write the new German translations
with open('app/translations/de.json', 'r') as f:
  data = json.load(f)

data.update(new_de_trans)

with open('app/translations/de.json', 'w') as jsonFile:
    json.dump(data, jsonFile, indent = 2, sort_keys=True)

# Write the new English translations
with open('app/translations/en.json', 'r') as f:
  data = json.load(f)

data.update(new_en_trans)

with open('app/translations/en.json', 'w') as jsonFile:
    json.dump(data, jsonFile, indent = 2, sort_keys=True)

os.system('yarn lint-translations')